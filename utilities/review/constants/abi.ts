export const RESOLVER_TRUSTFUL_ABI = [
  {
    inputs: [
      { internalType: "address", name: "_scorer", type: "address" },
      { internalType: "address", name: "_easResolver", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "BadgeNotRegistered", type: "error" },
  { inputs: [], name: "GrantProgramNonExistant", type: "error" },
  { inputs: [], name: "GrantProgramNotReviewed", type: "error" },
  { inputs: [], name: "OnlyEASResolver", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "grantUID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "txUID",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "string",
        name: "grantProgramLabel",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "averageScore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reviewCount",
        type: "uint256",
      },
    ],
    name: "StoryCreated",
    type: "event",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "grantUID", type: "bytes32" },
      { internalType: "bytes32", name: "txUID", type: "bytes32" },
      { internalType: "bytes32[]", name: "badges", type: "bytes32[]" },
      { internalType: "uint8[]", name: "scores", type: "uint8[]" },
      { internalType: "string", name: "grantProgramLabel", type: "string" },
    ],
    name: "createStory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "easResolver",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "grantProgramLabel", type: "string" },
    ],
    name: "getGrantProgramReviewCount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "grantProgramLabel", type: "string" },
    ],
    name: "getGrantProgramScore",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "grantUID", type: "bytes32" },
      { internalType: "uint256", name: "index", type: "uint256" },
    ],
    name: "getGrantStorie",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "bytes32", name: "txUID", type: "bytes32" },
          { internalType: "bytes32[]", name: "badgeIds", type: "bytes32[]" },
          { internalType: "uint8[]", name: "badgeScores", type: "uint8[]" },
          { internalType: "uint256", name: "averageScore", type: "uint256" },
        ],
        internalType: "struct IResolver.GrantStory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "grantUID", type: "bytes32" }],
    name: "getGrantStorieLength",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "grantUID", type: "bytes32" }],
    name: "getGrantStories",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "timestamp", type: "uint256" },
          { internalType: "bytes32", name: "txUID", type: "bytes32" },
          { internalType: "bytes32[]", name: "badgeIds", type: "bytes32[]" },
          { internalType: "uint8[]", name: "badgeScores", type: "uint8[]" },
          { internalType: "uint256", name: "averageScore", type: "uint256" },
        ],
        internalType: "struct IResolver.GrantStory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes", name: "data", type: "bytes" }],
    name: "scoreOf",
    outputs: [
      { internalType: "bool", name: "success", type: "bool" },
      { internalType: "uint256", name: "score", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "scorer",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_easResolver", type: "address" },
    ],
    name: "setEasResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_scorer", type: "address" }],
    name: "setScorer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export const RESOLVER_EAS_ABI = [
  {
    inputs: [{ internalType: "contract IEAS", name: "eas", type: "address" }],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AccessControlBadConfirmation", type: "error" },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "bytes32", name: "neededRole", type: "bytes32" },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "AccessDenied", type: "error" },
  { inputs: [], name: "InvalidEAS", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "role", type: "bytes32" },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "role", type: "bytes32" },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "role", type: "bytes32" },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "uid", type: "bytes32" },
          { internalType: "bytes32", name: "schema", type: "bytes32" },
          { internalType: "uint64", name: "time", type: "uint64" },
          { internalType: "uint64", name: "expirationTime", type: "uint64" },
          { internalType: "uint64", name: "revocationTime", type: "uint64" },
          { internalType: "bytes32", name: "refUID", type: "bytes32" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "address", name: "attester", type: "address" },
          { internalType: "bool", name: "revocable", type: "bool" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "attest",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "role", type: "bytes32" }],
    name: "getRoleAdmin",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "hasRole",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPayable",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "callerConfirmation", type: "address" },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "uid", type: "bytes32" },
          { internalType: "bytes32", name: "schema", type: "bytes32" },
          { internalType: "uint64", name: "time", type: "uint64" },
          { internalType: "uint64", name: "expirationTime", type: "uint64" },
          { internalType: "uint64", name: "revocationTime", type: "uint64" },
          { internalType: "bytes32", name: "refUID", type: "bytes32" },
          { internalType: "address", name: "recipient", type: "address" },
          { internalType: "address", name: "attester", type: "address" },
          { internalType: "bool", name: "revocable", type: "bool" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct Attestation",
        name: "attestation",
        type: "tuple",
      },
    ],
    name: "revoke",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "role", type: "bytes32" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceId", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
];

export const TRUSTFUL_SCORER_ABI = [
  { inputs: [], name: "AccountHasNoBadges", type: "error" },
  { inputs: [], name: "BadgeNotRegistered", type: "error" },
  { inputs: [], name: "BadgeRegistered", type: "error" },
  { inputs: [], name: "IndexOutOfBounds", type: "error" },
  { inputs: [], name: "InvalidLength", type: "error" },
  { inputs: [], name: "InvalidManager", type: "error" },
  { inputs: [], name: "InvalidResolverCall", type: "error" },
  { inputs: [], name: "ScorerNotRegistered", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "badgeId",
        type: "bytes32",
      },
    ],
    name: "BadgeAddedToAddr",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "badgeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "badgeScore",
        type: "uint256",
      },
    ],
    name: "BadgeAddedToScorer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "badgeId",
        type: "bytes32",
      },
    ],
    name: "BadgeRemovedFromAddr",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "badgeId",
        type: "bytes32",
      },
    ],
    name: "BadgeRemovedFromScorer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "ManagerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldResolver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newResolver",
        type: "address",
      },
    ],
    name: "ResolverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "ScorerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "scorerId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "TokenURIUpdated",
    type: "event",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "badgeId", type: "bytes32" },
      { internalType: "uint256", name: "badgeScore", type: "uint256" },
    ],
    name: "addBadgeToScorer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "badgeId", type: "bytes32" },
    ],
    name: "getBadgeScore",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "scorerId", type: "uint256" },
    ],
    name: "getBadgesFromAddr",
    outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "scorerId", type: "uint256" }],
    name: "getBadgesIds",
    outputs: [{ internalType: "bytes32[]", name: "", type: "bytes32[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "scorerId", type: "uint256" }],
    name: "getBadgesScores",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "scorerId", type: "uint256" },
    ],
    name: "getLegacyScoreOf",
    outputs: [
      { internalType: "bytes32[]", name: "", type: "bytes32[]" },
      { internalType: "uint256[]", name: "", type: "uint256[]" },
      { internalType: "uint256", name: "finalScore", type: "uint256" },
      { internalType: "uint256", name: "averageScore", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "scorerId", type: "uint256" }],
    name: "getManagerAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "scorerId", type: "uint256" }],
    name: "getResolverAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes", name: "data", type: "bytes" },
      { internalType: "uint256", name: "scorerId", type: "uint256" },
    ],
    name: "getScoreOf",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "scorerId", type: "uint256" }],
    name: "getScorerDecimals",
    outputs: [{ internalType: "uint8", name: "", type: "uint8" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextScorerId",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "badgeId", type: "bytes32" },
    ],
    name: "registerBadgeToAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "manager", type: "address" },
      { internalType: "address", name: "resolver", type: "address" },
      { internalType: "bytes32[]", name: "badgeIds", type: "bytes32[]" },
      { internalType: "uint256[]", name: "badgeScores", type: "uint256[]" },
      { internalType: "uint8", name: "scoresDecimals", type: "uint8" },
      { internalType: "string", name: "metadata", type: "string" },
    ],
    name: "registerScorer",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "badgeId", type: "bytes32" },
    ],
    name: "removeBadgeFromAddr",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "badgeId", type: "bytes32" },
    ],
    name: "removeBadgeFromScorer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "bytes32", name: "badgeId", type: "bytes32" },
    ],
    name: "scorerContainsBadge",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "address", name: "newManager", type: "address" },
    ],
    name: "setNewManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "address", name: "newResolver", type: "address" },
    ],
    name: "setNewResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "scorerId", type: "uint256" },
      { internalType: "string", name: "metadata", type: "string" },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "scorerId", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
];

export const GRANT_REGISTRY_ABI = [
  { inputs: [], name: "GrantAlreadyExists", type: "error" },
  { inputs: [], name: "GrantNonExistent", type: "error" },
  { inputs: [], name: "InvalidChain", type: "error" },
  { inputs: [], name: "InvalidGrantManager", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "grantId",
        type: "bytes32",
      },
    ],
    name: "GrantDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "grantId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldManager",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newManager",
        type: "address",
      },
    ],
    name: "GrantManagerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "grantId",
        type: "bytes32",
      },
      { indexed: true, internalType: "bytes32", name: "id", type: "bytes32" },
      {
        indexed: true,
        internalType: "address",
        name: "grantee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "grantProgramLabel",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "manager",
        type: "address",
      },
    ],
    name: "GrantRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "grantId",
        type: "bytes32",
      },
      { indexed: true, internalType: "bytes32", name: "id", type: "bytes32" },
      {
        indexed: false,
        internalType: "string",
        name: "grantProgramLabel",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum IGrantRegistry.Status",
        name: "status",
        type: "uint8",
      },
    ],
    name: "GrantUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "id", type: "bytes32" },
          { internalType: "uint256", name: "chain", type: "uint256" },
          { internalType: "address", name: "grantee", type: "address" },
          { internalType: "string", name: "grantProgramLabel", type: "string" },
          { internalType: "string", name: "project", type: "string" },
          { internalType: "string[]", name: "externalLinks", type: "string[]" },
          { internalType: "uint256", name: "startDate", type: "uint256" },
          { internalType: "uint256", name: "endDate", type: "uint256" },
          {
            internalType: "enum IGrantRegistry.Status",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "fundingTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "fundingAmounts",
                type: "uint256[]",
              },
              { internalType: "bool[]", name: "disbursed", type: "bool[]" },
            ],
            internalType: "struct IGrantRegistry.Disbursement",
            name: "disbursements",
            type: "tuple",
          },
        ],
        internalType: "struct IGrantRegistry.Grant",
        name: "grant",
        type: "tuple",
      },
    ],
    name: "generateId",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "grantUID", type: "bytes32" }],
    name: "getGrant",
    outputs: [
      {
        components: [
          { internalType: "bytes32", name: "id", type: "bytes32" },
          { internalType: "uint256", name: "chain", type: "uint256" },
          { internalType: "address", name: "grantee", type: "address" },
          { internalType: "string", name: "grantProgramLabel", type: "string" },
          { internalType: "string", name: "project", type: "string" },
          { internalType: "string[]", name: "externalLinks", type: "string[]" },
          { internalType: "uint256", name: "startDate", type: "uint256" },
          { internalType: "uint256", name: "endDate", type: "uint256" },
          {
            internalType: "enum IGrantRegistry.Status",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "fundingTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "fundingAmounts",
                type: "uint256[]",
              },
              { internalType: "bool[]", name: "disbursed", type: "bool[]" },
            ],
            internalType: "struct IGrantRegistry.Disbursement",
            name: "disbursements",
            type: "tuple",
          },
        ],
        internalType: "struct IGrantRegistry.Grant",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "grantUID", type: "bytes32" }],
    name: "getManager",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bytes32", name: "id", type: "bytes32" },
          { internalType: "uint256", name: "chain", type: "uint256" },
          { internalType: "address", name: "grantee", type: "address" },
          { internalType: "string", name: "grantProgramLabel", type: "string" },
          { internalType: "string", name: "project", type: "string" },
          { internalType: "string[]", name: "externalLinks", type: "string[]" },
          { internalType: "uint256", name: "startDate", type: "uint256" },
          { internalType: "uint256", name: "endDate", type: "uint256" },
          {
            internalType: "enum IGrantRegistry.Status",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "fundingTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "fundingAmounts",
                type: "uint256[]",
              },
              { internalType: "bool[]", name: "disbursed", type: "bool[]" },
            ],
            internalType: "struct IGrantRegistry.Disbursement",
            name: "disbursements",
            type: "tuple",
          },
        ],
        internalType: "struct IGrantRegistry.Grant",
        name: "grant",
        type: "tuple",
      },
      { internalType: "address", name: "manager", type: "address" },
    ],
    name: "register",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "grantUID", type: "bytes32" }],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "grantUID", type: "bytes32" },
      { internalType: "address", name: "newManager", type: "address" },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bytes32", name: "grantUID", type: "bytes32" },
      {
        components: [
          { internalType: "bytes32", name: "id", type: "bytes32" },
          { internalType: "uint256", name: "chain", type: "uint256" },
          { internalType: "address", name: "grantee", type: "address" },
          { internalType: "string", name: "grantProgramLabel", type: "string" },
          { internalType: "string", name: "project", type: "string" },
          { internalType: "string[]", name: "externalLinks", type: "string[]" },
          { internalType: "uint256", name: "startDate", type: "uint256" },
          { internalType: "uint256", name: "endDate", type: "uint256" },
          {
            internalType: "enum IGrantRegistry.Status",
            name: "status",
            type: "uint8",
          },
          {
            components: [
              {
                internalType: "address[]",
                name: "fundingTokens",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "fundingAmounts",
                type: "uint256[]",
              },
              { internalType: "bool[]", name: "disbursed", type: "bool[]" },
            ],
            internalType: "struct IGrantRegistry.Disbursement",
            name: "disbursements",
            type: "tuple",
          },
        ],
        internalType: "struct IGrantRegistry.Grant",
        name: "grant",
        type: "tuple",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export const BADGE_REGISTRY_ABI = [
  { inputs: [], name: "BadgeAlreadyRegistered", type: "error" },
  { inputs: [], name: "InvalidBadgeNameLength", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "badgeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "BadgeRegistered",
    type: "event",
  },
  {
    inputs: [{ internalType: "bytes32", name: "badgeId", type: "bytes32" }],
    name: "badgeExists",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "badges",
    outputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "string", name: "description", type: "string" },
      { internalType: "string", name: "metadata", type: "string" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "metadata", type: "string" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct IBadgeRegistry.Badge",
        name: "badge",
        type: "tuple",
      },
    ],
    name: "create",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "metadata", type: "string" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct IBadgeRegistry.Badge",
        name: "badge",
        type: "tuple",
      },
    ],
    name: "generateId",
    outputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "badgeId", type: "bytes32" }],
    name: "getBadge",
    outputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "string", name: "description", type: "string" },
          { internalType: "string", name: "metadata", type: "string" },
          { internalType: "bytes", name: "data", type: "bytes" },
        ],
        internalType: "struct IBadgeRegistry.Badge",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
